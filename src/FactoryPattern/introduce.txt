介绍：
工厂方法模式是创建型设计模式之一。工厂方法模式是一种结构简单的模式，其在我们平时开发中应用很广泛，也许你并不知道，但是你已经使用了无数次该模式了，如Android中Activity里的各个生命周期方法，
以OnCreate为例，他就可以看作是一个工厂方法，我们在其中可以构造我们的View并通过setContentView返回给framework处理等。
定义：
定义一个用于创建对象的接口，让子类决定实例化哪个类。
使用场景：
在任何需要生成复杂对象的地方，都可以使用工厂方法模式。复杂对象适合使用工厂模式，用new就可以完成创建的对象无需使用工厂模式。


==========================================================================================================================================================

抽象工厂与工厂模式的区别：

首先来看看这两者的定义区别：
工厂模式：定义一个用于创建对象的借口，让子类决定实例化哪一个类
抽象工厂模式：为创建一组相关或相互依赖的对象提供一个接口，而且无需指定他们的具体类

个人觉得这个区别在于产品，如果产品单一，最合适用工厂模式，但是如果有多个业务品种、业务分类时，通过抽象工厂模式产生需要的对象是一种非常好的解决方式。再通俗深化理解下：
 工厂模式针对的是一个产品等级结构 ，抽象工厂模式针对的是面向多个产品等级结构的。

 工厂方法模式：
 针对的是一个产品等级结构
 一个抽象产品类
 可以派生出多个具体产品类
 一个抽象工厂类，可以派生出多个具体工厂类
 每个具体工厂类只能创建一个具体产品类的实例

抽象工厂模式：
针对的是面向多个产品等级结构
多个抽象产品类
每个抽象产品类可以派生出多个具体产品类
一个抽象工厂类，可以派生出多个具体工厂类
每个具体工厂类可以创建多个具体产品类的实例