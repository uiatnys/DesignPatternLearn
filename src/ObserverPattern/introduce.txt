观察者模式：
观察者模式是一个使用率非常高的模式，他最常用的地方是GUI系统、订阅——发布系统。因为这个模式的一个重要作用就是解耦，将被观察者和观察者解耦，使得他们之间的依赖性更小，甚至做到毫无依赖。
以GUI系统来说，应用的UI具有易变性，尤其是前期随着业务的改变或者产品的需求修改，应用界面也会经常性变化，但是业务逻辑基本变化不大，此时，GUI系统需要一套机制来应对这种情况，使得UI层与
具体的业务逻辑解耦，观察者模式此时就派上用场了。
定义：
定义对象间一种一对多的依赖关系，使得每当一个对象改变状态，则所有依赖于它的对象都会得到通知并被自动更新。
使用场景：
关联行为场景，需要注意的是，关联行为是可拆分的，而不是“组合”关系
事件多级触发场景
跨系统的消息交换场景，如消息队列、事件总线的处理机制

优点：
观察者和被观察者之间是抽象耦合，应对业务变化
增强系统灵活性、可扩展性


缺点：
在应用观察者模式时需要考虑一下开发效率和运行效率问题，程序中包括一个被观察者、多个观察者、开发和调试等内容会比较复杂，而且在java中消息的通知默认是顺序执行，一个观察者卡顿，会影响整体
的执行效率，在这种情况下，一般考虑采用异步的方式。